{"version":3,"sources":["GlobalStyles.js","components/Header/Header-styles.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.js","components/HeroImage/HeroImage-styles.js","components/HeroImage/HeroImage.js","components/Grid/Grid-styles.js","components/Grid/Grid.js","components/Thumbnail/Thumbnail-styles.js","components/Thumbnail/Thumbnail.js","components/Spinner/Spinner.js","components/Spinner/Spinner-styles.js","components/SearchBar/SearchBar-styles.js","images/search-icon.svg","components/SearchBar/SearchBar.js","components/Button/Button-styles.js","components/Button/Button.js","config.js","images/no_image.jpg","API.js","helpers.js","hooks/useHomeFetch.js","components/Home.js","components/BreadCrumb/BreadCrumb-styles.js","components/BreadCrumb/BreadCrumb.js","components/MovieInfo/MovieInfo-styles.js","components/MovieInfo/MovieInfo.js","components/MovieInfoBar/MovieInfoBar-styles.js","components/MovieInfoBar/MovieInfoBar.js","components/Actor/Actor-styles.js","components/Actor/Actor.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","image","Text","HeroImage","props","title","text","Grid","header","children","Image","boxShadow","Thumbnail","movieId","clickable","Spinner","border","SearchBar","setSearchTerm","useState","search","setSearch","setBorder","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","SearchIcon","type","placeholder","value","onChange","e","target","button","Button","callback","onClick","console","log","process","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","results","total_pages","total_results","Home","state","setState","loading","setLoading","error","setError","isLoadingMore","setLoadingMore","API","movies","prev","persistedState","setItem","useHomeFetch","config","backdrop_path","original_title","overview","length","map","movie","poster_path","noImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","NoImage","className","tagline","Number","parseFloat","vote_average","toFixed","genres","genre","name","directors","director","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","fetchData","credits","crew","filter","member","job","actors","cast","useMovieFetch","match","params","runtime","actor","profile_path","NotFound","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6792cae.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n:root{\r\n    --maxWidth:1280px;\r\n    --white:#fff;\r\n    --lightGrey:#eee;\r\n    --medGrey:#353535;\r\n    --darkGrey:#1c1c1c;\r\n    --fontSuperBig:2.5rem;\r\n    --fontBig:1.5rem;\r\n    --fontMed:1.2rem;\r\n    --fontSmall:1rem;\r\n}\r\n*{\r\n    box-sizing:border-box;\r\n    font-family:'Abel',sans-serif;\r\n    margin: 0;\r\n    padding:0;\r\n}\r\n\r\nbody{\r\n\r\n    \r\n    h1{\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        color:(--white);\r\n    }\r\n    h3{\r\n        font-size: 1.1rem;\r\n        font-weight: 600;\r\n    }\r\n    p{\r\n        font-size: 1rem;\r\n        color:var(--white);\r\n    }\r\n}\r\n\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nbackground: var(--darkGrey);\r\npadding: 0 20px;\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\ndisplay:flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\nmax-width: 1280px ;\r\npadding: 20px 0;\r\nmargin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\nwidth:200px;\r\n\r\n@media screen and (max-width:500px){\r\n    width:150px;\r\n}\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n width: 110px;\r\n@media screen and (max-width:500px){\r\n    width:75px;\r\n}\r\n`;","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { Wrapper,Content,TMDBLogoImg,LogoImg } from \"./Header-styles\";\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\r\n\r\n\r\nfunction Header(){\r\n    \r\n    return(\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to=\"/MovieTracker\"><LogoImg src={RMDBLogo} alt=\"rmdb-logo\" /></Link>\r\n            <TMDBLogoImg src={TMDBLogo} alt = \"tmdb-logo\"/>\r\n        </Content>\r\n    </Wrapper>)\r\n}\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nbackground:linear-gradient(to bottom , rgba(0,0,0,0.1) 41%, rgba(0,0,0,0.7) 100%) , \r\nurl(${({image}) => image});\r\nbackground-size: cover;\r\nbackground-position: center;\r\nheight: 600px;\r\nposition: relative;\r\nanimation: animateHeroImage 1s;\r\n\r\n@keyframes animateHeroImage{\r\n    from{\r\n        opacity: 0;\r\n    }\r\n    to{\r\n        opacity: 1;\r\n    }\r\n}\r\n`;\r\n\r\nexport const Content = styled.div`\r\npadding:20px;\r\nmax-width: var(--maxWidth);\r\nmargin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\nz-index:1000;\r\nmax-width: 1150px;\r\nword-wrap: break-word;\r\nposition: absolute;\r\nbottom: 40px;\r\npadding:10px 15px;\r\nmin-height: 100px;\r\ncolor:var(--white);\r\n h1{\r\n     font-size: var(--fontSuperBig);\r\n     margin:10px 0;\r\n     @media screen and (max-width:720px){\r\n         font-size: var(--fontBig);\r\n     }\r\n\r\n }\r\n p{\r\n     font-size: var(--fontMed);\r\n     @media screen and (max-width:720px){\r\n         font-size: var(--fontSmall);\r\n     }\r\n }\r\n\r\n @media screen and (max-width){\r\n     max-width: 100%;\r\n }\r\n`;\r\n","import React from \"react\"\r\nimport {Wrapper,Content,Text} from \"./HeroImage-styles\";\r\n\r\n\r\n\r\n\r\nfunction HeroImage(props){\r\n    return(\r\n        <Wrapper image = {props.image}>\r\n            <Content>\r\n                <Text>\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </Text>\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default HeroImage;","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\nmax-width: var(--maxWidth);\r\nmargin:0 auto;\r\npadding: 0 20px;\r\n h1{\r\n     color:var(--medGrey);\r\n     width:100%;\r\n     text-align: center;\r\n     margin: 12px 0 13px;\r\n\r\n     @media screen and (max-width: 768px){\r\n         font-size: var(--fontBig);\r\n     };\r\n }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display:grid;\r\n    grid-template-columns: repeat(auto-fill,minmax(200px,1fr));\r\n    grid-gap:2rem;\r\n`;\r\n\r\n","import React from \"react\"\r\nimport { Wrapper,Content } from \"./Grid-styles\"\r\n\r\n\r\nfunction Grid({header,children}){\r\n// console.log(children);\r\n    return(\r\n        <Wrapper>\r\n            <h1>{header}</h1>\r\n            <Content>{children} </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n width:100%;\r\n max-width: 720px;\r\n transition:all 0.3s;\r\n object-fit: cover;\r\n border-radius:20px;\r\nanimation: animateThumb 0.7s;\r\nbox-shadow: ${({boxShadow})=>(boxShadow?\"5px 5px 10px 2px black \":null)};\r\n\r\n@keyframes animateThumb{\r\n    from{\r\n        opacity: 0;\r\n    }\r\n    to{\r\n        opacity: 1;\r\n    }\r\n}\r\n`;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image } from \"./Thumbnail-styles\";\r\n\r\nfunction Thumbnail({ image, movieId, clickable, boxShadow }) {\r\n  return (\r\n    <div>\r\n      {clickable ? (\r\n        <Link to={`/MovieTracker/movie/${movieId}`}>\r\n          <Image src={image} alt=\"movie-thumb\" boxShadow={boxShadow} />\r\n        </Link>\r\n      ) : (\r\n        <Image src={image} alt=\"movie-thumb\" boxShadow={boxShadow} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Thumbnail;\r\n","import React from \"react\";\r\nimport { Spinner } from \"./Spinner-styles\";\r\n\r\n\r\nexport default Spinner;","import styled from \"styled-components\"\r\n\r\nexport const Spinner = styled.div`\r\nborder: 5px solid var(--lightGrey);\r\nborder-top: 5px solid var(--medGrey);\r\nheight:50px;\r\nwidth:50px;\r\nborder-radius: 50%;\r\nanimation: spin 0.8s linear infinite;\r\nmargin: 20px auto;\r\n\r\n@keyframes spin{\r\n    0%{\r\n      transform:rotate(0) ;\r\n    }\r\n    100%{\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nheight: 100px;\r\nbackground: var(--darkGrey);\r\npadding: 0 20px;\r\nborder-top:${(props=> props.border? \"0.5px solid var(--medGrey)\" : null)}\r\n`;\r\n\r\nexport const Content = styled.div`\r\nposition:relative;\r\nmax-width: var(--maxWidth);\r\nwidth: 100%;\r\nheight:60px;\r\nbackground: var(--medGrey);\r\nmargin: 0 auto;\r\nborder-radius: 40px;\r\ncolor:white;\r\n img{\r\n     position: absolute;\r\n     left:16px;\r\n     top:16px;\r\n     width: 30px;\r\n }\r\n input{\r\n     position:absolute;\r\n     padding:8px 60px; \r\n     height:100%;\r\n     font-size: 28px;\r\n     width:95%;\r\n     background: transparent;\r\n     outline: none;\r\n     color:white;\r\n     border:none;\r\n\r\n}\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import React, {useState,useEffect,useRef} from \"react\";\r\nimport {Wrapper,Content} from \"./SearchBar-styles\"\r\nimport SearchIcon from \"../../images/search-icon.svg\"\r\n\r\n\r\n\r\nfunction SearchBar({setSearchTerm}){\r\n    const [search,setSearch] = useState(\"\");\r\n    const [border,setBorder] = useState(false);\r\n    const initial = useRef(true);\r\n\r\n    useEffect(()=>{\r\n        if(initial.current){\r\n            initial.current = false;\r\n            return;\r\n        }\r\n        const timer = setTimeout(()=>{\r\n            setSearchTerm(search);\r\n        },600);\r\n        if(search){setBorder(true);}\r\n        else{setBorder(false);\r\n        }\r\n        \r\n\r\n        return ()=>clearTimeout(timer);\r\n    },[search]);\r\n    return(\r\n        <Wrapper border={border}>\r\n            <Content>\r\n                <img src={SearchIcon} />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Search Movie\"\r\n                    value={search} \r\n                    onChange={(e)=>{\r\n                        return(setSearch(e.target.value))\r\n                    }}\r\n                    />\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBar;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\ndisplay: block;\r\nbackground: var(--darkGrey);\r\nwidth:25%;\r\nmin-width: 200px;\r\nheight:60px;\r\ncolor:white;\r\nborder:0;\r\nfont-size: var(--fontBig);\r\nmargin:20px auto;\r\noutline:none;\r\ntransition: all 0.3s;\r\nborder-radius:30px;\r\n:hover{\r\n    opacity: 0.8;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport {Wrapper} from \"./Button-styles\"\r\n\r\n\r\nfunction Button({text,callback}){\r\n    return(\r\n        <Wrapper type=\"button\" onClick={callback}>{text}</Wrapper>\r\n    )\r\n}\r\n\r\nexport default Button;","\n// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconsole.log(process.env.REACT_APP_API_KEY);\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\n\nexport const isPersistedState = stateName =>{\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n}\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport API from \"../API\";\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nconst initial = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n  const [search, setSearchTerm] = useState(\"\");\r\n  const [state, setState] = useState(initial);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setLoadingMore] = useState(false);\r\n\r\n  // console.log(search);\r\n  const fetchMovies = async (page, searchTerm = \"\") => {\r\n    try {\r\n      setLoading(true);\r\n      setError(false);\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n      // console.log(movies);\r\n      if (movies.results) {\r\n        setState((prev) => {\r\n          return {\r\n            ...movies,\r\n            results:\r\n              page > 1\r\n                ? [...prev.results, ...movies.results]\r\n                : [...movies.results],\r\n          };\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setError(true);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  //initial and search\r\n  useEffect(() => {\r\n    //if not in search then check for storage\r\n    if (!search) {\r\n      const persistedState = isPersistedState(\"homeState\");\r\n      //if stored values -> set that to showcase\r\n      if (persistedState) {\r\n        setState(persistedState);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setState(initial);\r\n    fetchMovies(1, search);\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    if (!isLoadingMore) return;\r\n    else {\r\n      fetchMovies(state.page + 1, search);\r\n      setLoadingMore(false);\r\n    }\r\n  }, [isLoadingMore]);\r\n  //we need another use effect as the first useEffect will need to load the first page of movie everytime\r\n\r\n  //writing to the session storage -> when state or searchTerm changes\r\n  // we dont want to save searched state\r\n  useEffect(() => {\r\n    if (!search) {\r\n      sessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n    }\r\n  }, [search, state]);\r\n\r\n  return { state, loading, error, setSearchTerm, search, setLoadingMore };\r\n};\r\n","import React from \"react\";\r\n\r\n//components\r\nimport HeroImage from \"./HeroImage/HeroImage\";\r\nimport Grid from \"./Grid/Grid\";\r\nimport Thumbnail from \"./Thumbnail/Thumbnail\";\r\nimport Spinner from \"./Spinner/Spinner\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\nimport Button from \"./Button/Button\";\r\n//config\r\nimport * as config from \"../config\";\r\n//image\r\nimport noImage from \"../images/no_image.jpg\";\r\n//api\r\nimport API from \"../API\";\r\n//hooks\r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n\r\nfunction Home() {\r\n  const { state, loading, error, setSearchTerm, search, setLoadingMore } =\r\n    useHomeFetch(); //custom hooks\r\n  console.log(state);\r\n\r\n  if (error) return <div>Something is Wrong</div>;\r\n  return (\r\n    <div>\r\n      {state.results[0] && !search ? (\r\n        <HeroImage\r\n          image={\r\n            config.IMAGE_BASE_URL +\r\n            config.BACKDROP_SIZE +\r\n            state.results[0].backdrop_path\r\n          }\r\n          title={state.results[0].original_title}\r\n          text={state.results[0].overview}\r\n        />\r\n      ) : null}\r\n\r\n      <SearchBar setSearchTerm={setSearchTerm} />\r\n\r\n      <Grid header={search ? `Search Results` : \"Popular Movies\"}>\r\n        {state.results.length !== 0 &&\r\n          state.results.map((movie) => {\r\n            return (\r\n              <Thumbnail\r\n                key={movie.id}\r\n                clickable\r\n                boxShadow={true}\r\n                image={\r\n                  movie.poster_path\r\n                    ? config.IMAGE_BASE_URL +\r\n                      config.POSTER_SIZE +\r\n                      movie.poster_path\r\n                    : noImage\r\n                }\r\n                movieId={movie.id}\r\n              />\r\n            );\r\n          })}\r\n      </Grid>\r\n      {loading ? <Spinner /> : null}\r\n      {state.page < state.total_pages && !loading ? (\r\n        <Button text=\"Load More\" callback={() => setLoadingMore(true)} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nwidth:100%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: flex-start;\r\ncolor:white;\r\nbackground: var(--medGrey);\r\nheight: 70px;\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\nmax-width: var(--maxWidth);\r\ndisplay: flex;\r\nwidth: 100%;\r\nmargin: auto;\r\nspan{\r\n    font-size: var(--fontMed);\r\n    margin:0 4px;\r\n    @media screen and (max-width:768px){\r\n        font-size: var(--fontSmall);\r\n    }\r\n}\r\na{\r\n    color: white;\r\n    text-decoration: none;\r\n    :visited{\r\n        color:white;\r\n    \r\n    }\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport {Wrapper,Content} from \"./BreadCrumb-styles\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\n\r\nfunction BreadCrumb({movieTitle}){\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                <Link to=\"/\">\r\n                    <span>Home</span>\r\n                </Link>\r\n                <span>|</span>\r\n                <span>{movieTitle}</span>\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default BreadCrumb;","import styled from \"styled-components\";\r\nimport * as config from \"../../config\"\r\n\r\nexport const Wrapper = styled.div`\r\nbackground: ${({backdrop})=>backdrop ? (`url(${config.IMAGE_BASE_URL}${config.BACKDROP_SIZE}${backdrop})`):\"#000\"};\r\nbackground-size: cover;\r\nbackground-position:center;\r\npadding:40px 20px;\r\nanimation: animateMovieInfo 1s;\r\n\r\n@keyframes animateMovieInfo{\r\n    from{\r\n        opacity: 0;\r\n    }\r\n    to{\r\n        opacity: 1;\r\n    }\r\n}\r\n`;\r\n\r\nexport const Content = styled.div`\r\ndisplay: flex;\r\nmax-width: var(--maxWidth);\r\nmargin: 0 auto;\r\nbackground:rgba(0,0,0,0.7);\r\nborder-radius:20px;\r\n\r\n@media screen and (max-width:769px){\r\n    display: block;\r\n    max-width: none;\r\n}\r\n`;\r\n\r\nexport const Text = styled.div`\r\nwidth: 100%;\r\npadding:20px 40px;\r\ncolor:white;\r\noverflow: hidden;\r\n\r\n.tag{\r\n    font-size:var(--fontMed);\r\n}\r\n.rating-directors{\r\n    display: flex;\r\n    justify-content: flex-start;\r\n\r\n}\r\n.score{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width:35px;\r\n    height:35px;\r\n    background:white;\r\n    color:black;\r\n    font-weight: 800;\r\n    border-radius:50%;\r\n    margin:0;\r\n}\r\n.genre{\r\n    margin: 0 0 0 40px;\r\n    \r\n    div{\r\n        display: flex;\r\n        p{\r\n            margin: 0 3px;\r\n        }\r\n\r\n    }\r\n}\r\n.director{\r\n    margin:0 0 0 40px;\r\n    p{\r\n        margin:0;\r\n    }\r\n    \r\n    }\r\n\r\nh1{\r\n    margin:0 0 15px 0;\r\n    @media screen and (max-width:768px){\r\n        font-size:var(--fontBig);\r\n    }\r\n}\r\nh3{\r\n    font-size: var(--fontMed);\r\n    margin:0 0 15px 0;\r\n    @media screen and (max-width:768px){\r\n        font-size:var(--fontSmall);\r\n    }\r\n}\r\np{\r\n    font-size: 1.1rem;\r\n    margin:0 0 15px 0;\r\n    @media screen and (max-width:768px){\r\n        font-size:0.9rem;\r\n    }\r\n}\r\n`;","import React from \"react\";\r\nimport { Wrapper, Content, Text } from \"./MovieInfo-styles\";\r\nimport * as config from \"../../config\";\r\nimport NoImage from \"../../images/no_image.jpg\";\r\nimport Thumbnail from \"../Thumbnail/Thumbnail\";\r\n\r\nfunction MovieInfo({ movie }) {\r\n  return (\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n      <Content>\r\n        <Thumbnail\r\n          image={\r\n            movie.poster_path\r\n              ? `${config.IMAGE_BASE_URL}${config.POSTER_SIZE}${movie.poster_path}`\r\n              : NoImage\r\n          }\r\n          clickable={false}\r\n          alt=\"movie-thumb\"\r\n        ></Thumbnail>\r\n\r\n        <Text>\r\n          <h1>{movie.title}</h1>\r\n          <p className=\"tag\">{movie.tagline}</p>\r\n          <h3>PLOT</h3>\r\n          <p>{movie.overview}</p>\r\n          <div className=\"rating-directors\">\r\n            <div>\r\n              <h3>RATING</h3>\r\n              <div className=\"score\">\r\n                {Number.parseFloat(movie.vote_average).toFixed(1)}\r\n              </div>\r\n            </div>\r\n            <div className=\"genre\">\r\n              <h3>Genre</h3>\r\n              <div>\r\n                {movie.genres.map((genre) => {\r\n                  return <p key={genre.id}>{`${genre.name}`}</p>;\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"director\">\r\n              <h3>Director{movie.directors.length > 1 ? \"s\" : \"\"}</h3>\r\n              {movie.directors.map((director) => {\r\n                return <p key={director.credit_id}>{director.name}</p>;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Text>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  align-items: center;\r\n  display: flex;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  .column {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n    min-height: 40px;\r\n    flex: 1;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    .column {\r\n      margin: 10px 0;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {Wrapper,Content} from \"./MovieInfoBar-styles\"\r\nimport {calcTime,convertMoney} from \"../../helpers\"\r\n\r\n\r\nfunction MovieInfoBar({time,budget,revenue}){\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                <div className=\"column\">\r\n                    <p>Running Time: {calcTime(time)}</p>\r\n                </div>\r\n                \r\n                <div className=\"column\">\r\n                    <p>Budget: {convertMoney(budget)}</p>\r\n                </div>\r\n                \r\n                <div className=\"column\">\r\n                    <p>Revenue:{convertMoney(revenue)}</p>\r\n                </div>\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ncolor:white;\r\nbackground:var(--darkGrey);\r\nborder-radius:20px;\r\npadding:0;\r\ntext-align: center;\r\nh3{\r\n    margin: 10px 0 0 0 ;\r\n}\r\np{\r\n    margin:5px 0;\r\n}\r\n`;\r\n\r\nexport const Image = styled.img`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 200px;\r\nobject-fit: cover;\r\nbackground-position: center;\r\nborder-radius: 20px 20px 0 0;\r\n`;","import React from \"react\";\r\nimport { Wrapper, Image } from \"./Actor-styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Actor({ name, character, imageUrl }) {\r\n  return (\r\n    <Wrapper>\r\n      <Image src={imageUrl} alt=\"actor-thumb\"></Image>\r\n      <h3>{name}</h3>\r\n      <p>{character}</p>\r\n    </Wrapper>\r\n  );\r\n}\r\n// exp componentName.propTypes = {propAsKey:typeCheckingUsingProptypesAsValue}\r\n// exp propTypes is a property on the components -> Actor here\r\nActor.propTypes = {\r\n  name: PropTypes.string,\r\n  character: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport * as config from \"../config\";\r\nimport Grid from \"./Grid/Grid\";\r\nimport { Spinner } from \"./Spinner/Spinner\";\r\nimport NoImage from \"../images/no_image.jpg\";\r\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\r\nimport BreadCrumb from \"./BreadCrumb/BreadCrumb\";\r\nimport MovieInfo from \"./MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar/MovieInfoBar\";\r\nimport Actor from \"./Actor/Actor\";\r\n\r\nfunction Movie({ match }) {\r\n  var movieId = match.params.movieId;\r\n\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n  console.log(movie);\r\n\r\n  if (loading) return null;\r\n  if (error) return <div>Something went Wrong !!!</div>;\r\n  return (\r\n    <>\r\n      <BreadCrumb movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        revenue={movie.revenue}\r\n        budget={movie.budget}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {movie.actors.map((actor) => {\r\n          return (\r\n            <Actor\r\n              key={actor.credit_id}\r\n              name={actor.name}\r\n              character={actor.character}\r\n              imageUrl={\r\n                actor.profile_path\r\n                  ? `${config.IMAGE_BASE_URL}${config.POSTER_SIZE}${actor.profile_path}`\r\n                  : NoImage\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../API\";\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        const movie = await API.fetchMovie(movieId);\r\n        const credits = await API.fetchCredits(movieId);\r\n\r\n        //getDirectors only\r\n        const directors = credits.crew.filter((member) => {\r\n          if (member.job === \"Director\") {\r\n            return member;\r\n          }\r\n        });\r\n        setState({\r\n          ...movie,\r\n          actors: credits.cast,\r\n          directors,\r\n        });\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    const sessionState = isPersistedState(`${movieId}`);\r\n    if (sessionState) {\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      //returns so no more code can run\r\n      return;\r\n    }\r\n\r\n    fetchData();\r\n  }, [movieId]);\r\n\r\n  //writing to sessionStorage\r\n  useEffect(() => {\r\n    sessionStorage.setItem(`${movieId}`, JSON.stringify(state));\r\n  }, [state, movieId]);\r\n\r\n  return { state, loading, error };\r\n};\r\n","import React from \"react\";\r\n\r\nfunction NotFound(){\r\n    return(\r\n        <div>Not Found</div>\r\n    )\r\n\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\n//styles\nimport { GlobalStyle } from \"./GlobalStyles\";\n//components\nimport Header from \"./components/Header/Header\";\nimport Home from \"./components/Home\";\n//routing\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Route path=\"/MovieTracker/\" exact component={Home} />\n        <Route path=\"/MovieTracker/movie/:movieId\" component={Movie} />\n        <Route path=\"/MovieTracker/*\" component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}